# this is a sample python script with final TCP port scanner with fully complete optimisation
# this python script consists of thereading feature in addition to the port scanner program

import optparse
from socket import *
from threading import *

screenLock=Semaphore(value=1)

def connScan(tgtHost,tgtPort):
	try:
		connSkt=socket(AF_INET,SOCK_STREAM)
		connSkt.connect((tgtHost,tgtPort))
		connSkt.send('hello buddy')
		results=connSkt.recv(100)
		screenLock.acquire()
		print'[+] %s/tcp open'%tgtPort
		print'[+] '+ str(results)
	except:
		screenLock.acquire()
		print'[-] %d/tcp closed'%tgtPort
	finally:
		screenLock.release()
		connSkt.close()

def portScan(tgtHost,tgtPorts):
	try:
		tgtIP=gethostbyname(tgtHost)
	except:
		print"[-] Cannot resolve %s . Unknown host."%tgtHost
		return
	try:
		tgtName=gethostbyaddr(tgtIP)
		print"\n[+] Scan results for : "+tgtName[0]
	except:
		print'\n[+]  Scan results for :'+tgtIP
	setdefaulttimeout(1)
	for  tgtPort in tgtPorts:
		t=Thread(target=connScan,args=(tgtHost,int(tgtPort)))
		t.start()

def main():
	parser=optparse.OptionParser('usage%prog'+'-H<target Host> -p<target port>')
	parser.add_option('-H',dest='tgtHost',type='string',help='specify target host')
	parser.add_option('-p',dest='tgtPort',type='string',help='specify port[s] with seperated by commas.')
	(options,args)=parser.parse_args()
	tgtHost=options.tgtHost
	tgtPort=options.tgtPort1
	tgtPorts=str(options.tgtPort).split(',')
	if (tgtHost==None)|(tgtPorts[0]==None):
		print parser.usage
		exit(0)
	portScan(tgtHost,tgtPorts)

if __name__=="__main__":
	main()

# this is the end of the python script. which is nothing but a completed TCP port scanner.
